/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 public/models/House.glb --types
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useTexture } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

import * as manager from '../../../ScrollManager'

type GLTFResult = GLTF & {
  nodes: {
    House: THREE.Mesh
  }
  materials: {}
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const customTone = useTexture('gradientMaps/custom.png')
  customTone.minFilter = THREE.NearestFilter
  customTone.magFilter = THREE.NearestFilter

  const { nodes, materials } = useGLTF('/models/House.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.House.geometry} position={[0.09, 0.265, -0.03]} rotation={[manager.deg(-20), manager.deg(-40), manager.deg(-45)]} scale={[1.162/4, 1.67/4, 1/4]}>
        {/* <meshToonMaterial color={'#8d8d8d'} gradientMap={customTone} /> */}
        <meshStandardMaterial color={'#8d8d8d'} />
      </mesh>
    </group>
  )
}

useGLTF.preload('/models/House.glb')
